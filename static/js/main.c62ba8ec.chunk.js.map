{"version":3,"sources":["components/RatingList.js","actions/ActionTypes.js","actions/Rating.js","containers/RatingList.js","containers/RatingDetails.js","App.js","reportWebVitals.js","reducers/Rating.js","reducers/index.js","index.js"],"names":["RatingList","props","scroll","x","style","padding","paddingTop","bordered","dataSource","columns","SET_RATING_LIST","SET_RATING_DETAILS","API","setRatingList","ratingList","type","setRatingDetails","ratingDetails","title","dataIndex","key","render","review_rating","marginBottom","disabled","allowHalf","defaultValue","Number","split","trim","record","size","ghost","onClick","message","review_text","Modal","info","content","onOk","to","pathname","id","connect","state","ratingState","dispatch","getRatingList","axios","get","then","response","data","map","value","index","catch","error","useEffect","length","Title","Typography","Paragraph","Text","Link","getRatingDetails","i","ratingId","match","params","undefined","location","margin","Item","Object","keys","icon","UserOutlined","fontSize","strong","profile_name","marginLeft","review_country","reviewed_at","marginTop","level","review_title","product","href","url","product_company","tip","App","Header","position","zIndex","width","color","exact","path","component","RatingDetails","Footer","textAlign","window","innerHeight","screen","height","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","companyReducer","action","localState","assign","reducer","combineReducers","Rating","store","createStore","compose","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"uQAQeA,MANf,SAAoBC,GAEhB,OAAO,cAAC,IAAD,CAAOC,OAAQ,CAACC,EAAG,MAAOC,MAAO,CAAEC,QAAS,GAAIC,WAAY,KAAMC,UAAQ,EAACC,WAAYP,EAAMO,WAAYC,QAASR,EAAMQ,WCHtHC,EAAkB,kBAClBC,EAAqB,qB,kBCI5BC,EAAM,4EAoBCC,EAAgB,SAACC,GAC1B,MAAO,CACHC,KAAML,EACNI,WAAYA,IA2BPE,EAAmB,SAACC,GAC7B,MAAO,CACHF,KAAMJ,EACNM,cAAeA,ICrCvB,IAAMR,EAAU,CACd,CACES,MAAO,SACPC,UAAW,gBACXC,IAAK,gBACLC,OAAQ,SAACC,GAAD,OACN,iCACE,mBAAGlB,MAAO,CAAEmB,aAAc,GAA1B,SAAgCD,IAChC,cAAC,IAAD,CAAME,UAAQ,EAACC,WAAS,EAACC,aAAcJ,EAAgBK,OAAOL,EAAcM,MAAM,UAAU,GAAGC,QAAU,SAI/G,CACEX,MAAO,eACPC,UAAW,eACXC,IAAK,gBAEP,CACEF,MAAO,QACPC,UAAW,eACXC,IAAK,gBAEP,CACEF,MAAO,SACPE,IAAK,SACLC,OAAQ,SAACS,GAAD,OACN,eAAC,IAAD,CAAOC,KAAK,SAAZ,UACE,cAAC,IAAD,CAAQhB,KAAK,UAAUiB,OAAK,EAACC,QAAS,kBAxChCC,EAwC2CJ,EAAOK,iBAvC9DC,IAAMC,KAAK,CACTnB,MAAO,yBACPoB,QACE,8BACE,4BAAIJ,MAGRK,KAPS,eADb,IAAcL,GAwCN,8BAGA,cAAC,IAAD,CAAQnB,KAAK,UAAUiB,OAAK,EAA5B,SACE,cAAC,IAAD,CAAyBQ,GAAI,CAAEC,SAAS,UAAD,OAAYX,EAAOY,IAAMzB,cAAea,GAA/E,gCAAcA,EAAOY,YAmB/B,IAeeC,eAfS,SAAAC,GACtB,MAAO,CACLC,YAAaD,EAAMC,gBAII,SAAAC,GACzB,MAAO,CACLC,cAAe,WACb,OAAOD,GDxEF,SAACA,GACJ,IAAIhC,EAAa,GAEjB,OADAgC,EAASjC,EAAcC,IAChBkC,IAAMC,IAAIrC,GACZsC,MAAK,SAAAC,IACFrC,EAAaqC,EAASC,KAAKA,MAChBC,KAAI,SAACC,EAAOC,GACnBzC,EAAWyC,GAAX,GAA0BA,EAAQ,EAClCzC,EAAWyC,GAAX,IAA2BA,EAAQ,KAEvCT,EAASjC,EAAcC,OAE1B0C,OAAM,SAAAC,GACHX,EAASjC,EAAcC,cCiExB6B,EA3Bf,SAAgB1C,GACdyD,qBAAU,WACHzD,EAAM4C,YAAY/B,WAAW6C,QAChC1D,EAAM8C,kBAEP,IALkB,IAObjC,EAAeb,EAAM4C,YAArB/B,WAER,OAAO,cAAC,EAAD,CAAYN,WAAYM,EAAYL,QAASA,O,sDC7D9CmD,EAAiCC,IAAjCD,MAAOE,EAA0BD,IAA1BC,UAAWC,EAAeF,IAAfE,KAAMC,EAASH,IAATG,KAwEhC,IAcerB,eAdS,SAACC,GACvB,MAAO,CACLC,YAAaD,EAAMC,gBAII,SAACC,GAC1B,MAAO,CACLmB,iBAAkB,SAACvB,GACjB,OAAOI,EFxDmB,SAACJ,GAC7B,OAAO,SAACI,GACJ,IAAI7B,EAAgB,GAEpB,OADA6B,EAAS9B,EAAiBC,IACnB+B,IAAMC,IAAIrC,GACZsC,MAAK,SAAAC,GAEF,IADA,IAAIrC,EAAaqC,EAASC,KAAKA,KACtBc,EAAI,EAAGA,EAAIpD,EAAW6C,OAAQO,IACnC,GAAKA,EAAI,IAAOvC,OAAOe,GAAK,EACxBzB,EAAgBH,EAAWoD,IACd,GAASA,EAAI,EAC1BjD,EAAa,IAAUiD,EAAI,EAC3B,MAGRpB,EAASjC,EAAcC,IACvBgC,EAAS9B,EAAiBC,OAE7BuC,OAAM,SAAAC,GACHX,EAAS9B,EAAiBC,QEqCpBgD,CAAiBvB,QAKxBC,EApFf,SAAuB1C,GACrB,IAAIgB,EAAgB,GAChBkD,EAAWlE,EAAMmE,MAAMC,OAAO3B,GAalC,OAZAgB,qBAAU,gBAC6BY,IAAjCrE,EAAMsE,SAAStD,eACjBhB,EAAMgE,iBAAiBE,KAExB,IAGDlD,EADEhB,EAAMsE,SAAStD,cACDhB,EAAMsE,SAAStD,cAEfhB,EAAM4C,YAAY5B,cAIlC,sBAAKb,MAAO,CAAEC,QAAS,GAAIC,WAAY,KAAvC,UACE,eAAC,IAAD,CAAYF,MAAO,CAAEoE,OAAQ,aAA7B,UAEE,cAAC,IAAD,CAAShC,GAAI,CAAEC,SAAS,WAAxB,SAAqC,cAAC,IAAWgC,KAAZ,uBACrC,cAAC,IAAWA,KAAZ,UAAkBN,OAEnBO,OAAOC,KAAK1D,GAAe0C,OAC1B,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAQ5B,KAAK,QAAQ6C,KAAM,cAACC,EAAA,EAAD,MAD7B,QAEE,cAACd,EAAD,CAAM3D,MAAO,CAAE0E,SAAU,UAAYC,QAAM,EAA3C,SACG9D,EAAc+D,eAEjB,uBACA,cAAC,IAAD,CACExD,UAAQ,EACRpB,MAAO,CAAE6E,YAAa,IACtBxD,WAAS,EACTC,aAAcC,OACZV,EAAcK,cAAcM,MAAM,UAAU,GAAGC,UAGnD,eAACiC,EAAD,0BACe7C,EAAciE,eAD7B,MACgD,IAC7CjE,EAAckE,YAAa,OAE9B,cAACvB,EAAD,CAAOxD,MAAO,CAAEgF,UAAW,GAAKC,MAAO,EAAvC,SACGpE,EAAcqE,eAEjB,eAACxB,EAAD,WACE,cAACC,EAAD,CAAMgB,QAAM,EAAZ,4BACC9D,EAAcsE,WAEjB,eAACzB,EAAD,WACE,cAACC,EAAD,CAAMgB,QAAM,EAAZ,4BACA,cAACf,EAAD,CAAMwB,KAAMvE,EAAcwE,IAA1B,2BAEF,eAAC3B,EAAD,WACE,cAACC,EAAD,CAAMgB,QAAM,EAAZ,+BACC9D,EAAcyE,mBAEjB,eAAC5B,EAAD,WACE,cAACC,EAAD,CAAMgB,QAAM,EAAZ,2BACC9D,EAAckB,oBAKrB,cAAC,IAAD,CAAMwD,IAAI,qB,SCnDHC,MAhBf,WACE,OACE,gCACE,eAAC,IAAD,WACE,cAAC,IAAOC,OAAR,CAAe3E,MAAM,aAAad,MAAO,CAAE0F,SAAU,QAASC,OAAQ,EAAGC,MAAO,QAAhF,SAA0F,oBAAI5F,MAAO,CAAC6F,MAAM,SAAlB,0BAC1F,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWpG,IACjC,cAAC,IAAD,CAAOkG,OAAK,EAACC,KAAK,UAAUC,UAAWpG,IACvC,cAAC,IAAD,CAAOkG,OAAK,EAACC,KAAK,cAAcC,UAAWC,UAG/C,cAAC,IAAOC,OAAR,CAAelG,MAAO,CAAEmG,UAAW,SAAUnB,UAAWoB,OAAOC,YAAYD,OAAOE,OAAOC,OAAQH,OAAOE,OAAOC,OAAQH,OAAOC,YAAc,GAA5I,2DCNSG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB5D,MAAK,YAAkD,IAA/C6D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,iBCHRO,EAAe,CACjBtG,WAAY,GACZG,cAAe,IAiBJoG,EAdQ,WAAmC,IAAlCzE,EAAiC,uDAAzBwE,EAAcE,EAAW,uCACjDC,EAAa7C,OAAO8C,OAAO,GAAI5E,GACnC,OAAQ0E,EAAOvG,MACX,KAAKL,EAED,OADA6G,EAAWzG,WAAawG,EAAOxG,WAAW6C,OAAS,EAAI2D,EAAOxG,WAAayG,EAAWzG,WAC/EyG,EACX,KAAK5G,EAED,OADA4G,EAAWtG,cAAgBqG,EAAOrG,cAC3BsG,EACX,QACI,OAAO3E,ICbJ6E,EAJCC,YAAgB,CAC5B7E,YAAa8E,ICSbC,EAAQC,YAAYJ,EAASK,YAAQC,YAAgBC,OACzDC,IAAS5G,OACP,cAAC,IAAD,CAAUuG,MAAOA,EAAjB,SACE,cAAC,IAAMM,WAAP,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BxB,M","file":"static/js/main.c62ba8ec.chunk.js","sourcesContent":["import { Table, } from 'antd';\n\nfunction RatingList(props) {\n\n    return <Table scroll={{x: 1100}} style={{ padding: 50, paddingTop: 100}} bordered dataSource={props.dataSource} columns={props.columns} />;\n}\n\n\nexport default RatingList;","//RATING\nexport const SET_RATING_LIST = \"SET_RATING_LIST\";\nexport const SET_RATING_DETAILS = \"SET_RATING_DETAILS\";\nexport const SET_CREATED_RATING_DATA = \"SET_CREATED_RATING_DATA\";\nexport const SET_UPDATED_RATING_DATA = \"SET_UPDATED_RATING_DATA\";\nexport const SET_DELETED_RATING_DATA = \"SET_DELETED_RATING_DATA\";","import {\n    SET_RATING_LIST,\n    SET_RATING_DETAILS,\n} from \"./ActionTypes\";\nimport axios from 'axios';\n\nconst API = 'https://www.fakerestapi.com/datasets/api/v1/iphone-11-amazon-reviews.json'\n\nexport const getRatingList = () => {\n    return (dispatch) => {\n        let ratingList = [];\n        dispatch(setRatingList(ratingList));\n        return axios.get(API)\n            .then(response => {\n                ratingList = response.data.data\n                ratingList.map((value, index) => {\n                    ratingList[index]['id'] = index + 1\n                    ratingList[index]['key'] = index + 1\n                })\n                dispatch(setRatingList(ratingList))\n            })\n            .catch(error => {\n                dispatch(setRatingList(ratingList))\n            });\n    }\n}\nexport const setRatingList = (ratingList) => {\n    return {\n        type: SET_RATING_LIST,\n        ratingList: ratingList\n    }\n}\n\nexport const getRatingDetails = (id) => {\n    return (dispatch) => {\n        let ratingDetails = {};\n        dispatch(setRatingDetails(ratingDetails));\n        return axios.get(API)\n            .then(response => {\n                let ratingList = response.data.data\n                for (var i = 0; i < ratingList.length; i++) {\n                    if ((i + 1) === Number(id)) {\n                        ratingDetails = ratingList[i]\n                        ratingDetails['id'] = i + 1\n                        ratingDetails['key'] = i + 1\n                        break;\n                    }\n                }\n                dispatch(setRatingList(ratingList))\n                dispatch(setRatingDetails(ratingDetails))\n            })\n            .catch(error => {\n                dispatch(setRatingDetails(ratingDetails))\n            });\n    }\n}\nexport const setRatingDetails = (ratingDetails) => {\n    return {\n        type: SET_RATING_DETAILS,\n        ratingDetails: ratingDetails\n    }\n}","import React, { useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { Modal, Button, Space, Rate } from 'antd';\nimport { NavLink } from 'react-router-dom'\n\nimport RatingList from '../components/RatingList';\n\nimport { getRatingList } from '../actions/Rating'\n\nfunction info(message) {\n  Modal.info({\n    title: 'This is a review text.',\n    content: (\n      <div>\n        <p>{message}</p>\n      </div>\n    ),\n    onOk() { },\n  });\n}\n\n\nconst columns = [\n  {\n    title: 'Rating',\n    dataIndex: 'review_rating',\n    key: 'review_rating',\n    render: (review_rating) => (\n      <span>\n        <p style={{ marginBottom: 0 }}>{review_rating}</p>\n        <Rate disabled allowHalf defaultValue={review_rating ? Number(review_rating.split('out of')[0].trim()) : 0} />\n      </span>\n    ),\n  },\n  {\n    title: 'Profile Name',\n    dataIndex: 'profile_name',\n    key: 'profile_name',\n  },\n  {\n    title: 'Title',\n    dataIndex: 'review_title',\n    key: 'review_title',\n  },\n  {\n    title: 'Action',\n    key: 'action',\n    render: (record) => (\n      <Space size=\"middle\">\n        <Button type=\"primary\" ghost onClick={() => info(record.review_text)}>\n          Show Review Text\n        </Button>\n        <Button type=\"primary\" ghost>\n          <NavLink key={record.id} to={{ pathname: `rating/${record.id}`, ratingDetails: record }}>Show Review Details</NavLink>\n        </Button>\n      </Space>\n    ),\n  },\n];\n\nfunction Rating(props) {\n  useEffect(() => {\n    if (!props.ratingState.ratingList.length) {\n      props.getRatingList()\n    }\n  }, [])\n\n  const { ratingList } = props.ratingState\n\n  return <RatingList dataSource={ratingList} columns={columns} />;\n}\n\nconst mapStateToProps = state => {\n  return {\n    ratingState: state.ratingState,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getRatingList: () => {\n      return dispatch(getRatingList())\n    },\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Rating);\n","import React, { useEffect } from \"react\";\nimport { Typography, Spin, Rate, Avatar, Card, Breadcrumb } from \"antd\";\nimport { UserOutlined } from \"@ant-design/icons\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from 'react-router-dom'\n\nimport { getRatingDetails } from \"../actions/Rating\";\n\nconst { Title, Paragraph, Text, Link } = Typography;\n\nfunction RatingDetails(props) {\n  let ratingDetails = {};\n  let ratingId = props.match.params.id;\n  useEffect(() => {\n    if (props.location.ratingDetails === undefined) {\n      props.getRatingDetails(ratingId);\n    }\n  }, []);\n\n  if (props.location.ratingDetails) {\n    ratingDetails = props.location.ratingDetails;\n  } else {\n    ratingDetails = props.ratingState.ratingDetails;\n  }\n\n  return (\n    <div style={{ padding: 50, paddingTop: 100}}>\n      <Breadcrumb style={{ margin: \"16px 16px\" }}>\n        {/* <NavLink to={{ pathname: `/`}}><Breadcrumb.Item>Home</Breadcrumb.Item></NavLink> */}\n        <NavLink to={{ pathname: `/rating`}}><Breadcrumb.Item>Rating</Breadcrumb.Item></NavLink>\n        <Breadcrumb.Item>{ratingId}</Breadcrumb.Item>\n      </Breadcrumb>\n      {Object.keys(ratingDetails).length ? (\n        <Card>\n          <Typography>\n            <Avatar size=\"large\" icon={<UserOutlined />} /> &nbsp;\n            <Text style={{ fontSize: \"larger\" }} strong>\n              {ratingDetails.profile_name}\n            </Text>\n            <br />\n            <Rate\n              disabled\n              style={{ marginLeft: -20 }}\n              allowHalf\n              defaultValue={Number(\n                ratingDetails.review_rating.split(\"out of\")[0].trim()\n              )}\n            />\n            <Paragraph>\n              Reviewed in {ratingDetails.review_country} on{\" \"}\n              {ratingDetails.reviewed_at}{\" \"}\n            </Paragraph>\n            <Title style={{ marginTop: 0 }} level={3}>\n              {ratingDetails.review_title}\n            </Title>\n            <Paragraph>\n              <Text strong>Product Name: </Text>\n              {ratingDetails.product}\n            </Paragraph>\n            <Paragraph>\n              <Text strong>Product Link: </Text>\n              <Link href={ratingDetails.url}>Click Here</Link>\n            </Paragraph>\n            <Paragraph>\n              <Text strong>Product Company: </Text>\n              {ratingDetails.product_company}\n            </Paragraph>\n            <Paragraph>\n              <Text strong>Review Text: </Text>\n              {ratingDetails.review_text}\n            </Paragraph>\n          </Typography>\n        </Card>\n      ) : (\n        <Spin tip=\"Loading...\" />\n      )}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ratingState: state.ratingState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getRatingDetails: (id) => {\n      return dispatch(getRatingDetails(id));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RatingDetails);\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport RatingList from './containers/RatingList'\nimport RatingDetails from './containers/RatingDetails'\nimport { Layout } from 'antd';\n// import 'antd/dist/antd.css';\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <Layout.Header title=\"Rating App\" style={{ position: 'fixed', zIndex: 1, width: '100%' }}><h1 style={{color:'white'}}>Rating App</h1></Layout.Header>\n        <Switch>\n          <Route exact path=\"/\" component={RatingList} />\n          <Route exact path=\"/rating\" component={RatingList} />\n          <Route exact path=\"/rating/:id\" component={RatingDetails} />\n        </Switch>\n      </Router>\n      <Layout.Footer style={{ textAlign: 'center', marginTop: window.innerHeight<window.screen.height? window.screen.height- window.innerHeight : 0 }}>Rating App ©2021 Created by Karan Shaw</Layout.Footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n    SET_RATING_LIST,\n    SET_RATING_DETAILS,\n} from \"../actions/ActionTypes\";\nconst initialState = {\n    ratingList: [],\n    ratingDetails: {}\n}\n\nconst companyReducer = (state = initialState, action) => {\n    let localState = Object.assign({}, state);\n    switch (action.type) {\n        case SET_RATING_LIST:\n            localState.ratingList = action.ratingList.length > 0 ? action.ratingList : localState.ratingList;\n            return localState;\n        case SET_RATING_DETAILS:\n            localState.ratingDetails = action.ratingDetails;\n            return localState;\n        default:\n            return state;\n    }\n}\n\nexport default companyReducer;","import { combineReducers } from 'redux'\nimport Rating from './Rating'\nconst reducer = combineReducers({\n    ratingState: Rating,\n})\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport reducer from './reducers';\n\nlet store = createStore(reducer, compose(applyMiddleware(thunk)));\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}